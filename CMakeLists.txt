cmake_minimum_required(VERSION 3.20)

include(FetchContent)
include(CMakePrintHelpers)

# Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:
# Fix found at https://github.com/ethereum/solidity/pull/13429
if (CMAKE_VERSION VERSION_GREATER_EQUAL "3.24.0")
  cmake_policy(SET CMP0135 NEW)
endif()

project(Turbo LANGUAGES CUDA CXX)
option(GPU "GPU" ON)

if(NOT DEFINED CMAKE_CXX_STANDARD)
    set(CMAKE_CXX_STANDARD 20)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
endif()

if(NOT DEFINED CMAKE_CUDA_STANDARD)
    set(CMAKE_CUDA_STANDARD 20)
    set(CMAKE_CUDA_STANDARD_REQUIRED ON)
endif()

# XCSP3 C++ Parser dependency

find_package(LibXml2 REQUIRED)

FetchContent_Declare(
    xcsp3parser
    GIT_REPOSITORY    "https://github.com/xcsp3team/XCSP3-CPP-Parser"
    GIT_TAG           50ee7bfa59327c31a0a66ca4072a23cd08d0b182
)
FetchContent_MakeAvailable(xcsp3parser)

# Lattice land dependencies

FetchContent_Declare(
  cuda_battery
  GIT_REPOSITORY "https://github.com/lattice-land/cuda-battery.git"
  GIT_TAG        develop
)
FetchContent_MakeAvailable(cuda_battery)

FetchContent_Declare(
  lala_core
  GIT_REPOSITORY "https://github.com/lattice-land/lala-core.git"
  GIT_TAG        develop
)
FetchContent_MakeAvailable(lala_core)

FetchContent_Declare(
  lala_parsing
  GIT_REPOSITORY "https://github.com/lattice-land/lala-parsing.git"
  GIT_TAG        develop
)
FetchContent_MakeAvailable(lala_parsing)

FetchContent_Declare(
  lala_pc
  GIT_REPOSITORY "https://github.com/lattice-land/lala-pc.git"
  GIT_TAG        develop
)
FetchContent_MakeAvailable(lala_pc)

FetchContent_Declare(
  lala_search
  GIT_REPOSITORY "https://github.com/lattice-land/lala-search.git"
  GIT_TAG        develop
)
FetchContent_MakeAvailable(lala_search)

# Thrust dependency

FetchContent_Declare(
  thrust
  GIT_REPOSITORY "https://github.com/NVIDIA/thrust.git"
  GIT_TAG        1.12.0
)
FetchContent_GetProperties(thrust)
if(NOT thrust_POPULATED)
    FetchContent_Populate(thrust)
endif()

# Turbo executable

if(GPU)
    set_source_files_properties(
        src/turbo.cpp src/config.cpp
        PROPERTIES LANGUAGE CUDA)
endif()

add_executable(turbo src/turbo.cpp src/config.cpp)
target_include_directories(turbo PRIVATE include ${LIBXML2_INCLUDE_DIR} ${cpp-peglib_SOURCE_DIR} ${lala_parsing_SOURCE_DIR}/include ${lala_pc_SOURCE_DIR}/include ${lala_search_SOURCE_DIR}/include ${xcsp3parser_SOURCE_DIR}/include ${cuda_battery_SOURCE_DIR}/include ${lala_core_SOURCE_DIR}/include ${thrust_SOURCE_DIR})
if(GPU)
    set_property(TARGET turbo PROPERTY CUDA_ARCHITECTURES 75)
    set_property(TARGET turbo APPEND PROPERTY CUDA_SEPARABLE_COMPILATION ON)
endif()

target_compile_options(turbo PRIVATE
    $<$<COMPILE_LANGUAGE:CUDA>:
        --expt-relaxed-constexpr
        -diag-suppress 611  # Generated by the library cpp-peglib.
        -rdc=true>
    $<$<CONFIG:Debug>:-g -DDEBUG>
    $<$<CONFIG:LDebug>:-g -DTRACE>
)

target_link_libraries(turbo PRIVATE xcsp3parser ${LIBXML2_LIBRARIES})
